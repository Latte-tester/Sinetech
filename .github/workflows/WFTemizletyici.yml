name: Gereksiz wf temizleyici

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Hatalı ve İptal Edilen Workflow'ları Temizle
        uses: actions/github-script@v7
        with:
          script: |
            async function deleteWorkflowRuns() {
              let page = 1;
              let hasMoreRuns = true;
              let totalFailedDeleted = 0;
              let totalCancelledDeleted = 0;
              
              while (hasMoreRuns) {
                try {
                  // Hatalı workflow'ları al
                  const failedRuns = await github.rest.actions.listWorkflowRunsForRepo({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    status: 'failure',
                    per_page: 100,
                    page: page
                  });
                  
                  // İptal edilen workflow'ları al
                  const cancelledRuns = await github.rest.actions.listWorkflowRunsForRepo({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    status: 'cancelled',
                    per_page: 100,
                    page: page
                  });
                  
                  const allRuns = [...failedRuns.data.workflow_runs, ...cancelledRuns.data.workflow_runs];
                  
                  if (!allRuns.length) {
                    hasMoreRuns = false;
                    break;
                  }
                  
                  console.log(`İşleniyor: Sayfa ${page}, ${allRuns.length} adet workflow`);
                  
                  for (const run of allRuns) {
                    try {
                      await github.rest.actions.deleteWorkflowRun({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        run_id: run.id
                      });
                      
                      if (run.conclusion === 'failure') {
                        totalFailedDeleted++;
                        console.log(`Hatalı Workflow Silindi: ${run.name} (ID: ${run.id})`);
                      } else {
                        totalCancelledDeleted++;
                        console.log(`İptal Edilen Workflow Silindi: ${run.name} (ID: ${run.id})`);
                      }
                    } catch (deleteError) {
                      console.log(`Hata: ${run.name} (ID: ${run.id}) silinirken hata oluştu:`, deleteError);
                    }
                  }
                  
                  page++;
                } catch (error) {
                  console.log('API çağrısı sırasında hata:', error);
                  hasMoreRuns = false;
                }
              }
              
              console.log(`Temizleme işlemi tamamlandı.\nToplam ${totalFailedDeleted} hatalı workflow silindi.\nToplam ${totalCancelledDeleted} iptal edilen workflow silindi.`);
            }
            
            await deleteWorkflowRuns();
