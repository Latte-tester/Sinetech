# Domain Kontrol ve Güncelleme Workflowu

name: Otomatik Domain Kontrolü ve Güncelleme

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_and_update_domains:
    runs-on: ubuntu-latest

    permissions:
      contents: write 
      pull-requests: write 

    steps:
      - name: Depoyu Checkout Et
        uses: actions/checkout@v4
        with:
           token: ${{ secrets.GITHUB_TOKEN }}

      - name: Python Kurulumu
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Bağımlılıkları Yükle
        run: |
          python -m pip install --upgrade pip
          pip install cloudscraper

      - name: URL Kontrol ve Güncelleme Betiğini Çalıştır
        id: run_checker
        run: |
          python url_kontrol.py

      - name: Değişiklikleri Kontrol Et
        id: check_changes
        run: |
          # Eğer git diff bir değişiklik bulursa (çıkış kodu 0'dan farklı olursa)
          # 'changes=true' çıktısını ayarla
          git diff --quiet . || echo "changes=true" >> $GITHUB_OUTPUT

      - name: Değişiklikleri Commit Et ve PR Oluştur
        if: steps.check_changes.outputs.changes == 'true'
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           REPO_OWNER: ${{ github.repository_owner }}
           REPO_NAME: ${{ github.event.repository.name }}
           BASE_BRANCH: master # veya main
        run: |
          echo "Değişiklikler bulundu, commit ediliyor ve PR oluşturuluyor..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add .

          # Commit oluştur
          git commit -m "ci: Otomatik domain güncellemesi 🤖" -m "Workflow tarafından tespit edilen domain değişiklikleri uygulandı."

          BRANCH_NAME="auto-domain-update-${{ github.run_id }}"
          git checkout -b $BRANCH_NAME

          git push origin $BRANCH_NAME --force

          echo "Pull Request oluşturuluyor..."
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/pulls \
            -d @- <<EOF
          {
            "title": "ci: Otomatik Domain Güncellemesi 🤖",
            "head": "$BRANCH_NAME",
            "base": "$BASE_BRANCH",
            "body": "Workflow tarafından tespit edilen domain değişiklikleri uygulandı.\n\nLütfen değişiklikleri gözden geçirin ve onaylayın."
          }
          EOF
          echo "Pull Request oluşturuldu."
